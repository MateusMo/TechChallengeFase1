name: .NET CI Pipeline

on: [push]

jobs:
  build:
    name: Build the Project
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0"

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the project
        run: dotnet build --no-restore --configuration Release

  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0"

      - name: Restore dependencies
        run: dotnet restore

      - name: Run Unit Tests
        run: dotnet test --no-restore --configuration Release

  integration-tests:
    name: Run Integration Tests
    runs-on: ubuntu-24.04
    needs: unit-tests
    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2019-latest
        ports:
          - 1433:1433
        env:
          ACCEPT_EULA: "Y"
          MSSQL_SA_PASSWORD: "@Sql2019"
        options: >-
          --health-cmd "exit 0" 
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0"

      - name: Install dotnet-ef tool
        run: dotnet tool install --global dotnet-ef

      - name: Add dotnet tools to PATH
        run: echo "/home/runner/.dotnet/tools" >> $GITHUB_PATH

      - name: Restore dependencies
        run: dotnet restore

      - name: Update Database
        run: |
          cd ContactZone.Infrastructure
          dotnet ef database update

      - name: Run API
        run: |
          cd ContactZone.Api
          dotnet restore
          dotnet build --configuration Release
          dotnet run --urls "http://localhost:8080" &

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          pip install robotframework
          pip install robotframework-requests
          pip install robotframework-jsonlibrary
          pip install robotframework-databaselibrary
          pip install pymssql

      - name: Run Robot Framework tests
        run: |
          robot -d ./IntegrationTests/results/ IntegrationTests/tests/IntegrationTests.robot
